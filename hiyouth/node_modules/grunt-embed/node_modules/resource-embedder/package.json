{
  "name": "resource-embedder",
  "version": "0.2.2",
  "description": "Embeds the contents of external scripts and stylesheets into HTML.",
  "homepage": "https://github.com/callumlocke/resource-embedder",
  "bugs": {
    "url": "https://github.com/callumlocke/resource-embedder/issues"
  },
  "author": {
    "name": "Callum Locke",
    "url": "https://github.com/callumlocke"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/callumlocke/resource-embedder.git"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "main": "index.js",
  "scripts": {
    "test": "grunt nodeunit"
  },
  "devDependencies": {
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt-contrib-watch": "~0.5.3",
    "grunt-cli": "~0.1.9",
    "grunt": "~0.4.1",
    "sugar": "~1.4.1",
    "wrench": "~1.5.4"
  },
  "dependencies": {
    "coffee-script": "~1.7.1",
    "htmlparser2": "~3.5.0",
    "graceful-fs": "~2.0.2",
    "lodash": "~2.4.1",
    "reorient-css": "~0.2.1"
  },
  "readme": "# resource-embedder [![Build Status](https://secure.travis-ci.org/callumlocke/resource-embedder.png?branch=master)](http://travis-ci.org/callumlocke/resource-embedder)\n\n> Also available as a Grunt plugin: [grunt-embed](https://github.com/callumlocke/grunt-embed)\n\nAutomatically embeds the contents of external scripts and stylesheets into HTML markup.\n\nTakes an HTML file path and generates a string of modified markup. Any small external scripts and stylesheets are replaced with inline `<script>...</script>` or `<style>...</style>` elements.\n\nThis reduces the number of HTTP requests in return for inflating your HTML. It's up to you to decide whether this is a good trade-off in your situation.\n\n\n## Usage\n\n    npm install resource-embedder\n\n```javascript\nvar ResourceEmbedder = require('resource-embedder');\n\nvar embedder = new ResourceEmbedder('./app/page.html');\n\nembedder.get(function (markup) {\n  fs.writeFileSync('./dist/page.html', markup);\n});\n```\n\n### Choosing which files to embed\n\nBy default, **any scripts or stylesheets below 5KB in size** will be embedded. You can change this setting in the options.\n\nYou can also manually decide the threshold for each resource using a `data-embed` attribute.\n\nTo always embed a particular resource, regardless of filesize, just include the attribute:\n\n```html\n<script src=\"foo.js\" data-embed></script>\n<link rel=\"stylesheet\" href=\"foo.css\" data-embed>\n```\n\nTo prevent a particular script from ever being embedded, set it to `false` (or `0`):\n\n```html\n<script src=\"foo.js\" data-embed=\"false\"></script>\n<link rel=\"stylesheet\" href=\"foo.css\" data-embed=\"false\">\n```\n\nTo embed a particular resource only if it is below a certain size, specify the maximum number of bytes, or something like `5KB`:\n\n```html\n<script src=\"foo.js\" data-embed=\"2000\"></script>\n<link rel=\"stylesheet\" href=\"foo.css\" data-embed=\"5KB\">\n```\n\n### Options\n\nTo specify options:\n\n`new ResourceEmbedder('./file.html', options);`\n\n...or just: `new ResourceEmbedder(options);`\n\n* `htmlFile` — only required if you don't pass a file path as the first argument to the constructor.\n* `assetRoot` — (optional) – use this if you need to specify the directory that the relative resource URLs will be considered relative to. (By default, it's the same directory as the HTML file.)\n* `threshold` (default: `\"5KB\"`) — all resources below this filesize will be embedded. NB: you can set this to `0` if you want, in which case nothing will be embedded except those resources you mark with a `data-embed` attribute (see above).\n* `stylesheets` (default: `true`) — whether to embed stylesheets.\n* `scripts` (default: `true`) — whether to embed scripts.\n* `deleteEmbeddedFiles` (default: `false`) – whether the external files should be deleted after being embedded.\n\n\n## Contributing\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Test your code using [Grunt](http://gruntjs.com/).\n\n\n### Tasks\n\nWhen you're working on a specific module in `src`, e.g. `parse-file-size.coffee`, first run `grunt watch:parse-file-size` in a terminal and keep the window open. Then open `src/parse-file-size.coffee` and `test/parse-file-size_test.coffee` and work on them side-by-side. New test results will appear in the terminal whenever you save either file.\n\nYou can also just do `grunt watch` to watch all modules at once and run all test files whenever anything changes.\n\n\n## Release History\n\n_(Nothing yet)_\n\n\n## License\n\nCopyright (c) 2013 Callum Locke. Licensed under the MIT license.\n\n\n## Wishlist\n\n* Connect/Express middleware\n* ability to specify root for relative paths, in case different from the HTML file\n* remove `data-embed` attributes from elements that don't get embedded, so they don't litter the output markup unnecessarily\n\n",
  "readmeFilename": "README.md",
  "_id": "resource-embedder@0.2.2",
  "dist": {
    "shasum": "aa3b528350bd160329f9a12a4d6eb96c7d06da8a"
  },
  "_from": "resource-embedder@~0.2.1",
  "_resolved": "http://npm.oa.com/resource-embedder/-/resource-embedder-0.2.2.tgz"
}
